Commits in this patch:
----------------------

  2c2a1fb9f8d4d8035b83c28fd9faafb53164df1a
  net/sched: cls_fw: Fix improper refcount update leads to use-after-free



net/sched: cls_fw: Fix improper refcount update leads to use-after-free

jira: ROC-3181
cve: CVE-2023-3776
commit: 0323bce598eea038714f941ce2b22541c46d488f

    In the event of a failure in tcf_change_indev(), fw_set_parms() will
    immediately return an error after incrementing or decrementing
    reference counter in tcf_bind_filter().  If attacker can control
    reference counter to zero and make reference freed, leading to
    use after free.

    In order to prevent this, move the point of possible failure above the
    point where the TC_FW_CLASSID is handled.

    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: M A Ramdhan <ramdhan@starlabs.sg>
    Signed-off-by: M A Ramdhan <ramdhan@starlabs.sg>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Reviewed-by: Pedro Tammela <pctammela@mojatatu.com>
    Message-ID: <20230705161530.52003-1-ramdhan@starlabs.sg>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    (cherry picked from commit 0323bce598eea038714f941ce2b22541c46d488f)

Signed-off-by: David Gomez <dgomez@ciq.com>
diff --git a/net/sched/cls_fw.c b/net/sched/cls_fw.c
index 104fd2aef031..be6a022b1d7b 100644
--- a/net/sched/cls_fw.c
+++ b/net/sched/cls_fw.c
@@ -214,11 +214,6 @@ static int fw_set_parms(struct net *net, struct tcf_proto *tp,
 	if (err < 0)
 		return err;
 
-	if (tb[TCA_FW_CLASSID]) {
-		f->res.classid = nla_get_u32(tb[TCA_FW_CLASSID]);
-		tcf_bind_filter(tp, &f->res, base);
-	}
-
 	if (tb[TCA_FW_INDEV]) {
 		int ret;
 		ret = tcf_change_indev(net, tb[TCA_FW_INDEV], extack);
@@ -235,6 +230,11 @@ static int fw_set_parms(struct net *net, struct tcf_proto *tp,
 	} else if (head->mask != 0xFFFFFFFF)
 		return err;
 
+	if (tb[TCA_FW_CLASSID]) {
+		f->res.classid = nla_get_u32(tb[TCA_FW_CLASSID]);
+		tcf_bind_filter(tp, &f->res, base);
+	}
+
 	return 0;
 }
 
-- 
2.39.3

