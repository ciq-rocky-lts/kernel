Commits in this patch:
----------------------

  c647f85dc16fd8caf387ca8ad05117f607090983
  net/sched: cls_route: No longer copy tcf_result on update to avoid use-after-free



net/sched: cls_route: No longer copy tcf_result on update to avoid use-after-free

jira: ROC-3188
cve: CVE-2023-4206
commit: b80b829e9e2c1b3f7aae34855e04d8f6ecaf13c8

When route4_change() is called on an existing filter, the whole
tcf_result struct is always copied into the new instance of the filter.

This causes a problem when updating a filter bound to a class,
as tcf_unbind_filter() is always called on the old instance in the
success path, decreasing filter_cnt of the still referenced class
and allowing it to be deleted, leading to a use-after-free.

Fix this by no longer copying the tcf_result struct from the old filter.

    Fixes: 1109c00547fc ("net: sched: RCU cls_route")
    Reported-by: valis <sec@valis.email>
    Reported-by: Bing-Jhong Billy Jheng <billy@starlabs.sg>
    Signed-off-by: valis <sec@valis.email>
    Signed-off-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Reviewed-by: Victor Nogueira <victor@mojatatu.com>
    Reviewed-by: Pedro Tammela <pctammela@mojatatu.com>
    Reviewed-by: M A Ramdhan <ramdhan@starlabs.sg>
    Link: https://lore.kernel.org/r/20230729123202.72406-4-jhs@mojatatu.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    (cherry picked from commit b80b829e9e2c1b3f7aae34855e04d8f6ecaf13c8)

Signed-off-by: David Gomez <dgomez@ciq.com>
diff --git a/net/sched/cls_route.c b/net/sched/cls_route.c
index 882a0ad65af5..2c971975cc50 100644
--- a/net/sched/cls_route.c
+++ b/net/sched/cls_route.c
@@ -505,7 +505,6 @@ static int route4_change(struct net *net, struct sk_buff *in_skb,
 	if (fold) {
 		f->id = fold->id;
 		f->iif = fold->iif;
-		f->res = fold->res;
 		f->handle = fold->handle;
 
 		f->tp = fold->tp;
-- 
2.39.3

